---
// This component creates a typing animation for the headline
---

<div class="animated-heading-wrapper">
    <span class="hero-title-text">Network </span>
    <span class="animated-part">
        <span class="typing-text"></span>
        <span class="typing-cursor">|</span>
    </span>
</div>

<style>
    .animated-heading-container {
        width: 100%;
        text-align: center;
        margin: 0 auto;
        padding: 2rem 0;
    }

    .animated-heading {
        display: inline-block;
        font-family: var(--font-mono);
        font-weight: 100;
        font-size: 4rem;
        line-height: 1.2;
        margin: 0;
        white-space: nowrap;
    }

    .static-text {
        color: #ffffff;
    }

    .animated-text {
        display: inline-block;
        position: relative;
    }

    .animated-wrapper {
        color: #2fcc71; /* The green color from the image */
    }

    .cursor {
        position: relative;
        display: inline-block;
        color: #2fcc71;
        animation: blink 1s infinite;
    }

    .animated-heading-wrapper {
        display: inline-block;
        font-family: var(--font-mono);
        font-size: 4rem;
        margin-bottom: 1rem;
        line-height: 1.2;
        font-weight: 100;
        text-align: center;
        white-space: nowrap;
        color: #ffffff;
    }

    .hero-title-text {
        color: #ffffff;
    }

    .animated-part {
        display: inline-block;
    }

    .typing-text {
        color: #ffffff;
    }

    .typing-cursor {
        display: inline-block;
        color: #ffffff;
        animation: blink 1s step-end infinite;
        margin-left: 5px;
    }

    @keyframes blink {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: 0;
        }
    }

    @media (max-width: 768px) {
        .animated-heading {
            font-size: 3rem;
        }
    }

    @media (max-width: 480px) {
        .animated-heading {
            font-size: 2rem;
        }
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const typingText = document.querySelector(".typing-text");
        const cursor = document.querySelector(".typing-cursor");
        const words = ["Visibility", "Anywhere"];

        let wordIndex = 0;
        let charIndex = 0;
        let isDeleting = false;
        let isPaused = false;
        let pauseTime = 6300; // 6.3 seconds in milliseconds

        function type() {
            const currentWord = words[wordIndex];

            // Handle pausing with cursor blinking
            if (isPaused) {
                setTimeout(() => {
                    isPaused = false;
                    isDeleting = true;
                    type();
                }, pauseTime);
                return;
            }

            // Handle deleting
            if (isDeleting) {
                // Handle the comma when deleting
                if (
                    typingText.innerHTML.endsWith(",") ||
                    typingText.innerHTML.endsWith(", ")
                ) {
                    typingText.innerHTML = typingText.innerHTML.replace(
                        /,\s*$/,
                        "",
                    );
                } else if (typingText.textContent.length > 0) {
                    typingText.textContent = typingText.textContent.substring(
                        0,
                        typingText.textContent.length - 1,
                    );
                } else {
                    isDeleting = false;
                    wordIndex = 0; // Reset to first word
                    charIndex = 0;
                }

                setTimeout(type, 75); // Deleting speed
            } else {
                // Handle typing
                if (charIndex < currentWord.length) {
                    // All text is white
                    typingText.style.color = "#ffffff";

                    if (charIndex === 0) {
                        typingText.textContent = currentWord[0];
                    } else {
                        typingText.textContent += currentWord[charIndex];
                    }

                    charIndex++;
                    setTimeout(type, 150); // Typing speed
                } else {
                    // Word completed
                    if (wordIndex === 0) {
                        // After "Visibility", add a comma
                        typingText.innerHTML +=
                            '<span style="color: #ffffff;">,</span>';
                        isDeleting = false;
                        wordIndex = 1;
                        charIndex = 0;
                        setTimeout(type, 500);
                    } else {
                        // After "Anywhere", pause for 6.3 seconds before deleting
                        isPaused = true;
                        type(); // Call immediately to handle the pause
                    }
                }
            }
        }

        // Start the typing animation
        setTimeout(() => {
            type();
        }, 1000); // Delay before starting the animation
    });
</script>
